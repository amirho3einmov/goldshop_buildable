name: Build APK

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-apk:
    runs-on: ubuntu-latest
    timeout-minutes: 240

    steps:
    - name: Checkout repo
      uses: actions/checkout@v4

    - name: Setup Python 3
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Setup Java (OpenJDK 17)
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Install system packages
      run: |
        sudo apt-get update -y
        sudo apt-get install -y git python3-dev build-essential unzip zip \
          libncurses-dev libtinfo-dev libssl-dev libffi-dev liblzma-dev libbz2-dev zlib1g-dev \
          autoconf automake libtool pkg-config

    - name: Create virtualenv and install buildozer
      run: |
        python -m venv .venv
        .venv/bin/pip install --upgrade pip setuptools wheel
        .venv/bin/pip install --upgrade Cython virtualenv
        .venv/bin/pip install --no-cache-dir --upgrade buildozer
        echo "Python in venv:"
        .venv/bin/python -V
        echo "pip list in venv:"
        .venv/bin/pip list

    - name: Show repo files
      run: ls -la

    - name: Ensure buildozer.spec exists
      run: |
        if [ ! -f buildozer.spec ]; then
          echo "ERROR: buildozer.spec not found in repo root"
          ls -la
          exit 1
        fi

    - name: Build APK (debug) using venv
      # don't override HOME at job level; we set it inside the step to a safe path
      run: |
        # set HOME to the workspace (writable) so buildozer won't try to use "/"
        export HOME="${GITHUB_WORKSPACE}"
        mkdir -p "$HOME/.buildozer"
        echo "HOME set to: $HOME"
        # use the python inside the created venv to run buildozer
        .venv/bin/python -m buildozer -v android debug

    - name: Upload APK artifact
      uses: actions/upload-artifact@v4
      with:
        name: apk
        path: bin/*.apk
