name: Build Android APK

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

- name: Install system dependencies (robust, adds libltdl + m4 + libtool-bin)
  run: |
    set -e

    sudo apt-get update
    sudo add-apt-repository -y universe || true
    sudo apt-get update

    sudo apt-get install -y git build-essential zip unzip openjdk-17-jdk \
      autoconf automake libtool libtool-bin m4 pkg-config \
      autoconf-archive autotools-dev dh-autoreconf gettext \
      zlib1g-dev libncurses5-dev libncursesw5-dev cmake \
      curl wget python3 python3-pip python3-venv python3-distutils \
      patch libffi-dev || true

    # install libltdl dev macros (provides ltdl.m4)
    sudo apt-get install -y libltdl-dev || sudo apt-get install -y libltdl7-dev || true

    # libtinfo fallback
    wget -q http://security.ubuntu.com/ubuntu/pool/universe/n/ncurses/libtinfo5_6.3-2ubuntu0.1_amd64.deb || true
    sudo apt install -y ./libtinfo5_6.3-2ubuntu0.1_amd64.deb || true

    echo "=== dpkg: relevant packages ==="
    dpkg -l libtool libtool-bin m4 autoconf automake libltdl-dev libltdl7-dev libffi-dev || true

    if command -v aclocal >/dev/null 2>&1; then
      echo "aclocal dir:" && aclocal --print-acdir || true
    fi

    echo "=== ltdl macro locations (if present) ==="
    ls -la /usr/share/aclocal/ltdl.m4 /usr/share/aclocal/*ltdl* 2>/dev/null || true

    # upgrade pip and install python build tools
    python3 -m pip install --upgrade pip setuptools wheel
    python3 -m pip install --upgrade cython python-for-android buildozer || true

    # print version info (one-liners to avoid heredoc quoting issues)
    python3 -c "import importlib; 
    import sys
    try:
      p4a = importlib.import_module('pythonforandroid')
      print('python-for-android:', getattr(p4a,'__version__', p4a))
    except Exception as e:
      print('python-for-android import error:', e)"
        python3 -c "import Cython; print('Cython', getattr(Cython,'__version__', Cython))"


      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Android SDK (cmdline-tools + platform & build-tools)
        uses: android-actions/setup-android@v3
        with:
          packages: 'cmdline-tools;latest platform-tools platforms;android-34 build-tools;36.1.0'
          accept-android-sdk-licenses: true
          log-accepted-android-sdk-licenses: true

      - name: Confirm NDK available and prepare env
        run: |
          echo "NDK locations under /usr/local/lib/android/sdk/ndk and $HOME/Android/Sdk/ndk:"
          ls -la /usr/local/lib/android/sdk/ndk 2>/dev/null || true
          ls -la $HOME/Android/Sdk/ndk 2>/dev/null || true
          # clean previous build cache (important when changing NDK/p4a)
          rm -rf .buildozer || true
        env:
          # change this to a valid NDK >= 25 if your runner uses a different path
          ANDROID_NDK_HOME: /usr/local/lib/android/sdk/ndk/27.3.13750724
          ANDROID_NDK_ROOT: /usr/local/lib/android/sdk/ndk/27.3.13750724
          ANDROIDNDK: /usr/local/lib/android/sdk/ndk/27.3.13750724

      - name: Build APK
        uses: digreatbrian/buildozer-action@v2
        with:
          python-version: 3.11
          buildozer-cmd: buildozer -v android debug
        env:
          ANDROID_SDK_ROOT: $HOME/Android/Sdk
          ANDROID_HOME: $HOME/Android/Sdk
          ANDROID_NDK_HOME: /usr/local/lib/android/sdk/ndk/27.3.13750724
          ANDROID_NDK_ROOT: /usr/local/lib/android/sdk/ndk/27.3.13750724
          ANDROIDNDK: /usr/local/lib/android/sdk/ndk/27.3.13750724

      - name: Collect logs and create zip
        if: ${{ always() }}
        run: |
          set -e
          mkdir -p logs
          cp -a .buildozer logs/ 2>/dev/null || true
          cp -a bin logs/ 2>/dev/null || true
          echo "=== ENV ===" > logs/env.txt
          env >> logs/env.txt || true
          echo "=== SDKMANAGER LIST ===" > logs/sdkmanager_list.txt
          if command -v sdkmanager >/dev/null 2>&1; then
            sdkmanager --list 2>&1 | sed -n '1,1000p' > logs/sdkmanager_list.txt || true
          else
            echo "sdkmanager not found" >> logs/sdkmanager_list.txt
          fi
          zip -r logs.zip logs || true
          echo "Created logs.zip"

      - name: Upload artifacts (APK + logs)
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            ./bin/*.apk
            ./logs.zip
